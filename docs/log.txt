*  Make sure new functions have sensible tests
*  Specify false positive avoidance new approach
*  If it works plan experimental dev
    *  Need not branch - use different allocator in same setup
*  Commit all with baseline comment
*  Code top down the algorithm
    *  Get to work at face value
*  Review what done
*  Make things deterministic order for tests
*  Any silly dupe in loops
*  Convert set intersection tests to being implicit None
*  Design and make unit tests
o  Does addition of 3 P's undermine calling set comitted to for an
   earlier assay, because the presence of one or more P's will cause
   false positives for a previously isolated assay?
    o  Yes
    o  Code remedy to see what happens
        *  Get to run with test
        *  Unit test new utils:
            *  allocation: chamber_set_reserved_by_assay():
            *  allocation: assay_is_present_in_all_of()
        o  Unit test new vulnerability thing
            o  Beware not seen retracted allocation
        o  All tests in avoidFP test module
        o  Unit test at system level
o  Full result correctness test
o  What realist targets present set sizes?

o  Regression tests and clean out of redundant code.
o  If works, decide how to update API and get to Brad

o  Merit in seeking more headroom

o  Ditch concept of Assays with replicas?
o  Real hard-coded assay names
o  Calling in clinical terms
o  Impact of failing chamber
o  Password protect

o  Make root url take you form
o  Is all the docker legacy pointless?

----------------------------------------------------------------------------
Misc
----------------------------------------------------------------------------
----------------------------------------------------------------------------
Adding Ps undermines previous calling set?
----------------------------------------------------------------------------

To make sure our newly added allocation does not undermine a previously
committed one, we need to consider the full new picture at each point.

Assuming that we keep track of the chamber set used for each assay as
cs<P>

Then...

When considering {1,4,7} for Assay_P, we must ask:

    If we pretend we have alread allocated the P replicas to {1,4,7}, then is
    it still true that:

        For all assays A thru P:

            The chamber set for said assay remains not vulnerable to FP.

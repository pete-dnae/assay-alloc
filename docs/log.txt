*  Make sure new functions have sensible tests
*  Specify false positive avoidance new approach
*  If it works plan experimental dev
    *  Need not branch - use different allocator in same setup
*  Commit all with baseline comment
*  Code top down the algorithm
    *  Get to work at face value
*  Review what done
*  Make things deterministic order for tests
*  Any silly dupe in loops
*  Convert set intersection tests to being implicit None
*  Design and make unit tests
o  Does addition of 3 P's undermine calling set comitted to for an
   earlier assay, because the presence of one or more P's will cause
   false positives for a previously isolated assay?
    o  Yes
    o  Code remedy to see what happens
        *  Get to run with test
        *  Unit test new utils:
            *  allocation: chamber_set_reserved_by_assay():
            *  allocation: assay_is_present_in_all_of()
            *  unit test for unrserve assay
        o  Check retracton of assay alloc as alloc unit test
            o  something fishy
                *  work back up with utils and small tests
                o  trace thru tiny real example
                    *  unit test for is_already_reserved_for_assay_other_than(
                    *  unit test for which_assay_reserved_this_chamber_set(
                    o  upgrade unit test for spurious fire
                    *  never consider a target set that is one of the
                       reserved ones
                    o  fix up inner loop logic
            o  prove out with test_realistic_sized_example_without_dontmix(self):
        o  Unit test new vulnerability thing
            o  How?
                o  Spurious fire method test
                o  Check retracton of assay alloc
                o  Code the and logic to allow separate test
                o  What logic left that can be tested?
                o  Put in debug first to see if exercising like thought would
                   we realistic size test.
            o  Beware not seen retracted allocation
        o  All tests in avoidFP test module
        o  Unit test at system level
o  Full result correctness test
o  Calling test / or report
o  What realist targets present set sizes?

o  Regression tests and clean out of redundant code.
o  If works, decide how to update API and get to Brad

o  Merit in seeking more headroom

o  Ditch concept of Assays with replicas?
o  Real hard-coded assay names
o  Calling in clinical terms
o  Impact of failing chamber
o  Password protect

o  Make root url take you form
o  Is all the docker legacy pointless?

----------------------------------------------------------------------------
Misc
----------------------------------------------------------------------------
----------------------------------------------------------------------------
Simple test debugging
----------------------------------------------------------------------------

When considering {1,2,3} for B, should object because this set will already
fire all in the presence of A.


o  we require that the smallest number of replicas chosen be at least (1?)
   larger than sim_targets.
o  that will be so big that we might as well make it the same for all assays
    o  change the experiment design to take a sim_targets param, and offer no
       controls to replicas
        *  code exp design
        o  use tests to work out where to set replicas
            *  dev using test_tiny
            o  bring up the rest
        o  put assertion into allocate for contravene number expected
           in alloc sets
        o  get allocator tests to run thus
    o  can we make it work with headroom of 2 with realistic case?

o  Leads to configurable headroom of more than 2 !!!!

o  Test that proves mutex and cover of allocation?
o  Make report for Brad even if can't ship yet.

o  Full result correctness test
o  Calling test / or report
o  What realist targets present set sizes?

o  Regression tests and clean out of redundant code.
o  If works, decide how to update API and get to Brad

o  Merit in seeking more headroom

o  Ditch concept of Assays with replicas?
o  Real hard-coded assay names
o  Calling in clinical terms
o  Impact of failing chamber
o  Password protect

o  Make root url take you form
o  Is all the docker legacy pointless?

----------------------------------------------------------------------------
def _is_allocation_with_assay_P_added_vulnerable(
----------------------------------------------------------------------------

reserve 123 for A
reserve 456 for B

adding C to 367 makes the allocation vulnerable because in the presence
of AB, all of 367 fire despite C not being present

test should ensure that a target set that contains AB is the one that points
this out



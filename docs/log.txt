*  Get decent ascii report coming out
    *  Work out how to pretty print a data structure
    *  Design what want to see
    *  Make it so
*  Report in order of % pop deployed
*  Cmd line usage
*  Quick freeze experiment
*  Doc freeze deploy
*  Improve randomness
*  Make sure orig cmd line works
*  Make it respond to error with example cmd line
*  pyinstaller work - for single file?
*  How hard do pyside? (too hard)
*  Assess web delivery feasibility
    *  Give up
*  Rebuild cmdline app and provide to Brad
    *  Make app with pyinstaller
    *  Test it
    *  Put readme and release notes usage adjacent or in docs
    *  Include tips like arrows and redirect to file
*  Deliver cmd line version to Brad
    *  Copy bin to sharepoint
    *  Send email with location and manual
*  Try AppEngine
    *  Do the tutorial, using an entry point in the real project
        *  Repeat from scratch in linux
o  AppEngine develop
    o  Write crib sheet to set up env, run and deploy
    o  Understand exactly how current form works
    o  Hypothesise if will use two urls / tempaltes the same
    o  Mix in basic bootstrap content, using CDN?
    o  Work up bits of form to look like what want
    o  Make handler kick the model
    o  Begin to include content derived from model back to rendered page
    o  And the rest is history

o  Simple web form version of what have
    o  What look like
    o  Make sure can k8s it
    o  Work up

----------------------------------------------------------------------------
Misc
----------------------------------------------------------------------------

python assay-alloc.py --assays 20 --replicas 3 --chambers 24 --dontmix 3 --targets 2



*  How progress random alloc with probabilities?
    *  Decide kernel scope
    *  Decide runtime mo
    *  CRC mk 2
    *  Folder org - all model, alongside orig
    *  Decide dev milestones
*  Experiment input model
    *  Tweak existing experiment input model to suit
    *  Test helper to make fixed one
*  Class to generate and skip subsets
*  Just do top down from kernel runner entry point
o  Got something so clean up and decide deploy before finish io and stats
    o  Ditch redundant modules

Todo / Debt
    o  Decide how to introduce replicas and make sure we don't break the
       stats assumptions.
    o  Make sure the allocation algorithm is not skewing stats by variance in
       how many of each assay gets allocated, and some chambers having fewer
       assays than others.
-------------------------------------------------------------------------------
Kernel Scope
-------------------------------------------------------------------------------

Define experiments as
    num chambers avail
    list of assay names
    how many replicas of each assay wanted
    list of mutex assay pairs

Define exp simulation as which assay targets present k
Create and Allocate Assay subsets to chambers in loops until placed
sufficient.

Create from feed of random alloc sets (seeded).
Skip any which contravene pair rules.

Create results capability (object)
    assays in each chamber looku up both ways
    count of each assay type in firing chambers
        (should incriminate which assays)
    summary result = believe these assays present cos of these characteristics
    vs reference char


-------------------------------------------------------------------------------
Runtime mo
-------------------------------------------------------------------------------
run_experiment -f experiment_setup 
outputs to screen
-------------------------------------------------------------------------------
Dev Milestones
- Defn of model and test helper to make fixed one
- Loop to generate and skip subsets
- Allocate them to chambers until sufficient
- Interpreter
- Create results model
- Report results to screen
- Entry point that uses cmd line args to build models from file
- Comments
- Tests
- Consider deployment

-------------------------------------------------------------------------------
Report
-------------------------------------------------------------------------------

This many chambers fired: 17


100% hits suggests 1 assay present.
Circa 50% hits suggests 2 assays present
Circa 33% hits suggests 3 assays present
Circa 25% hits suggests 3 assays present

100% hits: N
66% hits: P and N
22% hits: A,B,G,H
Fewer than 10% hits: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
